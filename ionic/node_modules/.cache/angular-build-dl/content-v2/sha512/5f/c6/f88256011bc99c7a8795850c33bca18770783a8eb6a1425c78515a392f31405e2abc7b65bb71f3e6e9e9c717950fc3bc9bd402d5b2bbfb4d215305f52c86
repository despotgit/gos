{"version":3,"sources":["./src/app/tab3/tab3.page.html","./src/app/services/message.service.ts","./src/app/tab3/tab3-routing.module.ts","./src/app/tab3/tab3.module.ts","./src/app/tab3/tab3.page.scss","./src/app/tab3/tab3.page.ts"],"names":[],"mappings":"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","file":"tab3-tab3-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      {{userTo}}\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-list *ngFor=\\\"let msg of messages\\\">\\n    <ion-item>\\n      <ion-label *ngIf=\\\"!msg.isImage\\\">{{msg.fromUser}}: {{msg.message}}</ion-label>\\n      <ion-label *ngIf=\\\"msg.isImage\\\">{{msg.fromUser}}:</ion-label>\\n     <!-- <img *ngIf=\\\"msg.isImage\\\" style=\\\"width:30%;\\\" [src]=\\\"msg.img\\\"/>-->\\n      <video *ngIf=\\\"msg.isImage\\\" class=\\\"video-js\\\" autoplay controls >\\n        <source [src]=\\\"msg.img\\\" type=\\\"video/mp4\\\" />\\n\\n        The “video” tag is not supported by your browser. Click [here] to download the video file.\\n      </video>\\n    </ion-item>\\n  </ion-list>\\n  <ion-item>\\n      <ion-label position=\\\"floating\\\">Type message</ion-label>\\n      <ion-input [(ngModel)]=\\\"message\\\" (keyup)=\\\"$event.keyCode == 13 && sendMessage()\\\"></ion-input>\\n      <ion-button color=\\\"success\\\" (click)=\\\"sendMessage()\\\" slot=\\\"end\\\">Send</ion-button>\\n    </ion-item>\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  baseName = \"messages\";\n\n  constructor(private http: HttpService) { }\n\n  getMessages(from: string, to:string) {\n    return this.http.getUrl(`${this.baseName}/?from=${from}&to=${to}`);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab3Page } from './tab3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab3Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab3PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab3PageRoutingModule } from './tab3-routing.module'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\n    Tab3PageRoutingModule,\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ChatService} from '../services/chat.service';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {MessageService} from '../services/message.service';\n\n@Component({\n    selector: 'app-tab3',\n    templateUrl: 'tab3.page.html',\n    styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page implements OnInit {\n\n    userTo: string;\n    message: string; // input message from user\n    userFrom: string;\n    messages = [];\n\n    constructor(private route: ActivatedRoute,\n                private service: ChatService,\n                private sanitizer: DomSanitizer,\n                private messageService: MessageService) {\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe(params => {\n            console.log('username params ', JSON.stringify(params.userTo));\n            this.userTo = params.userTo;\n            this.userFrom = params.userFrom;\n            this.messageService.getMessages(this.userFrom, this.userTo)\n                .subscribe((messages) => {\n                    this.messages = messages;\n                })\n        });\n\n        //subscribe to new messages\n        this.service.getMessages()\n            .subscribe((message) => {\n                console.log('received from service ', message);\n                // check if user the chat is equals to user from. If it's from user current add to list.\n                if (this.userTo == message.fromUser) {\n                    this.messages.push(message);\n                } else {\n                    // message is from another user (not the current on screen tab). Not added to list. Need to save on MongoDB\n                    console.log('message not for user current on!', message)\n                }\n            });\n\n        //subscribe to new images messages\n        this.service.getMessagesImage()\n            .subscribe((message) => {\n                console.log('received from service ', message);\n                if (this.userTo == message.fromUser) {\n                    // flag for show as image/video on html\n                    message.isImage = true;\n                    //convert to base64 and sanitize\n                    var imgBase64 = message.message;\n                    message.img = this.sanitizer.bypassSecurityTrustUrl(imgBase64);\n                    this.messages.push(message);\n                } else {\n                    // message is from another user (not the current on screen tab). Not added to list. Need to save on MongoDB //TODO\n                    console.log('message not for user current on!', message)\n                }\n            });\n    }\n\n    sendMessage() {\n        var msg = {fromUser: this.userFrom, toUser: this.userTo, message: this.message};\n        this.service.sendMessage(msg);\n        this.messages.push(msg);\n        this.message = \"\";\n    }\n\n}\n"],"sourceRoot":"webpack:///"}