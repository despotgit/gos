{"version":3,"sources":["./src/app/tab2/tab2.page.html","./src/app/tab2/tab2-routing.module.ts","./src/app/tab2/tab2.module.ts","./src/app/tab2/tab2.page.scss","./src/app/tab2/tab2.page.ts"],"names":[],"mappings":"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","file":"tab2-tab2-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      You are: {{userName}}\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-list *ngFor=\\\"let usr of users\\\">\\n    <ion-item (click)=\\\"directMessageTo(usr)\\\">\\n      <ion-label>{{usr.name}}</ion-label>\\n      <ion-icon [ngStyle]=\\\"{'color':usr.color}\\\" name=\\\"alert-circle-outline\\\"></ion-icon>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab2Page } from './tab2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab2Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab2PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab2PageRoutingModule } from './tab2-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab2PageRoutingModule\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvdGFiMi5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ModalController} from '@ionic/angular';\nimport {AddUserComponent} from './../modals/add-user/add-user.component';\n\nimport {UsersService} from './../services/users.service';\nimport {ChatService} from './../services/chat.service';\nimport {Router} from '@angular/router';\nimport {log} from \"util\";\n\n@Component({\n    selector: 'app-tab2',\n    templateUrl: 'tab2.page.html',\n    styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page implements OnInit {\n\n    users = [];\n    hasUser: boolean = false;\n    userName: string;\n\n    constructor(private service: UsersService,\n                private chatService: ChatService,\n                public modalController: ModalController,\n                private router: Router) {\n    }\n\n    ngOnInit() {\n        // this.service.getUsers().subscribe((data: any) => {\n        //     this.users = data;\n        // }, (err: any) => {\n        //     throw new Error(err);\n        // })\n        // if not user, show prompt and create or update user with socketId\n        if (!this.hasUser) {\n            console.log('not has user');\n            // emit new user event. The server asociate the user with socketId\n            this.presentModal();\n        }\n\n        //subscribe to connected user\n        this.chatService.getConnectedUser()\n            .subscribe((user) => {\n                console.log('received from service ', user);\n                // if not user exists in usersList add\n                var existe = false;\n                for (let i = 0; i < this.users.length; i++) {\n                    var usr = this.users[i];\n                    if (user.username == usr.name) {\n                        existe = true;\n                    }\n                }\n                // validate if user is new if new so update list\n                if (!existe) {\n                    this.getUsersAndUpdate();\n                }\n            });\n    }\n\n    async presentModal() {\n        const modal = await this.modalController.create({\n            component: AddUserComponent\n        });\n        await modal.present();\n        const {data} = await modal.onWillDismiss();\n        // after create user save or update with a socket id\n        this.chatService.addOrUpdateUser(data.userName);\n        this.userName = data.userName;\n        //store user logged in localstorage\n        localStorage.setItem('userName', this.userName);\n        this.hasUser = true;\n        //update users list\n        this.getUsersAndUpdate();\n    }\n\n    directMessageTo(user) {\n        console.log('direct msg', user);\n        this.router.navigate(['/tabs/tab3'], {queryParams: {userFrom: this.userName, userTo: user.name}});\n    }\n\n    private getUsersAndUpdate() {\n        this.service.getUsers().subscribe((data: any) => {\n            this.users = data;\n            for (let i = 0; i < this.users.length; i++) {\n                var usr = this.users[i];\n                if (usr.name == this.userName) {\n                    usr.color = \"green\";\n                } else {\n                    usr.color = \"white\";\n                }\n            }\n        }, (err: any) => {\n            throw new Error(err);\n        })\n    }\n}\n"],"sourceRoot":"webpack:///"}