{"version":3,"sources":["src/app/tab3/tab3.page.html","src/app/services/message.service.ts","src/app/tab3/tab3-routing.module.ts","src/app/tab3/tab3.module.ts","src/app/tab3/tab3.page.scss","src/app/tab3/tab3.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      {{userTo}}\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-list *ngFor=\\\"let msg of messages\\\">\\n    <ion-item>\\n      <ion-label *ngIf=\\\"!msg.isImage\\\">{{msg.fromUser}}: {{msg.message}}</ion-label>\\n      <ion-label *ngIf=\\\"msg.isImage\\\">{{msg.fromUser}}:</ion-label>\\n     <!-- <img *ngIf=\\\"msg.isImage\\\" style=\\\"width:30%;\\\" [src]=\\\"msg.img\\\"/>-->\\n      <video *ngIf=\\\"msg.isImage\\\" class=\\\"video-js\\\" autoplay controls >\\n        <source [src]=\\\"msg.img\\\" type=\\\"video/mp4\\\" />\\n\\n        The “video” tag is not supported by your browser. Click [here] to download the video file.\\n      </video>\\n    </ion-item>\\n  </ion-list>\\n  <ion-item>\\n      <ion-label position=\\\"floating\\\">Type message</ion-label>\\n      <ion-input [(ngModel)]=\\\"message\\\" (keyup)=\\\"$event.keyCode == 13 && sendMessage()\\\"></ion-input>\\n      <ion-button color=\\\"success\\\" (click)=\\\"sendMessage()\\\" slot=\\\"end\\\">Send</ion-button>\\n    </ion-item>\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  baseName = \"messages\";\n\n  constructor(private http: HttpService) { }\n\n  getMessages(from: string, to:string) {\n    return this.http.getUrl(`${this.baseName}/?from=${from}&to=${to}`);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab3Page } from './tab3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab3Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab3PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab3PageRoutingModule } from './tab3-routing.module'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\n    Tab3PageRoutingModule,\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ChatService} from '../services/chat.service';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {MessageService} from '../services/message.service';\n\n@Component({\n    selector: 'app-tab3',\n    templateUrl: 'tab3.page.html',\n    styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page implements OnInit {\n\n    userTo: string;\n    message: string; // input message from user\n    userFrom: string;\n    messages = [];\n\n    constructor(private route: ActivatedRoute,\n                private service: ChatService,\n                private sanitizer: DomSanitizer,\n                private messageService: MessageService) {\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe(params => {\n            console.log('username params ', JSON.stringify(params.userTo));\n            this.userTo = params.userTo;\n            this.userFrom = params.userFrom;\n            this.messageService.getMessages(this.userFrom, this.userTo)\n                .subscribe((messages) => {\n                    this.messages = messages;\n                })\n        });\n\n        //subscribe to new messages\n        this.service.getMessages()\n            .subscribe((message) => {\n                console.log('received from service ', message);\n                // check if user the chat is equals to user from. If it's from user current add to list.\n                if (this.userTo == message.fromUser) {\n                    this.messages.push(message);\n                } else {\n                    // message is from another user (not the current on screen tab). Not added to list. Need to save on MongoDB\n                    console.log('message not for user current on!', message)\n                }\n            });\n\n        //subscribe to new images messages\n        this.service.getMessagesImage()\n            .subscribe((message) => {\n                console.log('received from service ', message);\n                if (this.userTo == message.fromUser) {\n                    // flag for show as image/video on html\n                    message.isImage = true;\n                    //convert to base64 and sanitize\n                    var imgBase64 = message.message;\n                    message.img = this.sanitizer.bypassSecurityTrustUrl(imgBase64);\n                    this.messages.push(message);\n                } else {\n                    // message is from another user (not the current on screen tab). Not added to list. Need to save on MongoDB //TODO\n                    console.log('message not for user current on!', message)\n                }\n            });\n    }\n\n    sendMessage() {\n        var msg = {fromUser: this.userFrom, toUser: this.userTo, message: this.message};\n        this.service.sendMessage(msg);\n        this.messages.push(msg);\n        this.message = \"\";\n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"tab3-tab3-module-es5.js"}